#LyX 1.6.4 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass IEEEtran
\begin_preamble
\thispagestyle{empty}
\end_preamble
\use_default_options false
\language spanish
\inputencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\float_placement tbh
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Butiá: Plataforma robótica genérica para la enseñanza de la informática
\end_layout

\begin_layout Author
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
IEEEauthorblockN{
\end_layout

\end_inset

Gonzalo Tejera, Andrés Aguirre, Federico Andrade, Pablo Gindel, Santiago
 Margni y Jorge Visca
\begin_inset Newline newline
\end_inset

 {gtejera|aaguirre|fandrade|pablod|smargni|jvisca}@fing.edu.uy
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
IEEEauthorblockA{
\end_layout

\end_inset

Instituto de Computación, Facultad de Ingenier
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
'{i}
\end_layout

\end_inset

a, Universidad de la República J.
 Herrera y Reissig 565, Montevideo, Uruguay
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
El aprendizaje de la robótica en los niveles iniciales de la educación es
 una herramienta poderosa para trasmitir a los profesores, estudiantes y
 sus familias conocimientos básicos sobre las nuevas tecnología y sus aplicacion
es.
 Existen muchos mitos sobre las computadoras y los robots, desconocimientos
 básicos tanto sobre lo que pueden como lo que no pueden hacer, en ambos
 sentidos, y que generan por un lado miedos infundados y por otro expectativas
 desmedidas.
 La incorporación de los robots y de la inteligencia computacional se está
 dando de manera progresiva en nuestra sociedad, y es importante entonces
 contribuir a mejorar el conocimiento sobre estas tecnologías.
 Este artículo presenta una plataforma simple y económica que permite a
 los alumnos de los liceos públicos del Uruguay interiorizarse con la programaci
ón de robots.
\end_layout

\begin_layout Keywords
Educación inicial, enseñanza de informática y robótica.
\end_layout

\begin_layout Section
Introducción
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Don't panic the section numbering may look different in
\end_layout

\begin_layout Plain Layout
LyX but LaTeX uses the correct Roman numerals and
\end_layout

\begin_layout Plain Layout
Alpha for section counters.
\end_layout

\begin_layout Plain Layout
It's just that LyX doesn't handle counters other than arabic
\end_layout

\begin_layout Plain Layout
numerals.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
PARstart{L}{os}
\end_layout

\end_inset

 robots pueden ser una herramienta pedagógica poderosa y flexible.
 Permite a los estudiantes realizar elaboraciones mentales de orden superior,
 reflexionar sobre el por qué de las cosas, experimentar e identificar las
 repercusiones de las decisiones que se toman y comprenderlas.
 
\end_layout

\begin_layout Standard
El proyecto Butiá
\begin_inset CommandInset citation
LatexCommand cite
key "BUTIA"

\end_inset

 desarrollado con fondos de la Agencia Nacional de Investigación e Innovación
\begin_inset CommandInset citation
LatexCommand cite
key "ANII"

\end_inset

 crea una plataforma que permite a alumnos de liceos públicos, en coordinación
 con docentes e inspectores del Consejo de Enseñanza Secundaria (CES)
\begin_inset CommandInset citation
LatexCommand cite
key "CES"

\end_inset

, interiorizarse con la programación del comportamiento de robots.
 
\end_layout

\begin_layout Standard
El proyecto provee a los liceos seleccionados por el CES una plataforma
 simple y económica que permite a los alumnos definir el comportamiento
 de un robot, que proporciona ambiente lúdico e idóneo para que los estudiantes
 se interioricen con la programación y la robótica.
\end_layout

\begin_layout Standard
Es importante señalar que, en cuanto a la robótica, existe actualmente una
 profunda asimetría entre liceos públicos y privados, extendiéndose de manera
 creciente la robótica en la currícula de muchas instituciones privadas.
 Esta propuesta pretende contribuir a disminuir esta brecha acercando este
 sistema robótico a instituciones públicas de nivel secundario en las que
 hasta el momento, este tipo de sistemas no ha sido ampliamente incorporado.
 
\end_layout

\begin_layout Section
La robótica y la educación
\end_layout

\begin_layout Standard
Dada la creciente importancia que tiene la tecnología hoy en día y el amplio
 terreno que viene ganando la robótica y la mecatrónica en la vida de las
 personas en el mundo desarrollado, resulta conveniente comenzar a incorporar
 estos conceptos en las primeras etapas de la formación educativa de nuestros
 jóvenes.
 En este sentido, es interesante ofrecer a alumnos de educación secundaria
 la posibilidad de acercarse a nuevas tecnologías a través del manejo de
 robots y lenguajes de programación simples que les permitan controlarlos.
 Se espera con esta experiencia que los alumnos dispongan de un elemento
 más para definir su vocación hacia orientaciones Científico -- Tecnológicas.
 
\end_layout

\begin_layout Standard
Programar los comportamientos de un robot móvil genera mucho interés para
 los adolescentes.
 Además, les permite alcanzar resultados visuales inmediatos de sus programas,
 estimula su creatividad, así como al mismo tiempo se les enseñan conceptos
 básicos de programación.
 Se entiende que el trabajo con robots, desde una perspectiva de la robótica
 pedagógica potencia el desarrollo del aprendizaje inductivo y por descubrimient
o guiado; posibilita el diseño de situaciones didácticas que permiten a
 los estudiantes construir su propio conocimiento.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Colorado2005"

\end_inset


\end_layout

\begin_layout Standard
Esta propuesta busca generar entornos de aprendizaje centrados en la actividad
 de los propios estudiantes.
 Uno de los factores a destacar es la posibilidad de integración de las
 diferentes áreas, como matemáticas, ciencias experimentales, comunicación,
 filosofía, entre otras, que amplían la propuesta de trabajo a nivel de
 los centros educativos, posibilitando que se desarrollen proyectos de fin
 de año integrando varias asignaturas al trabajo con los robots, como se
 propone en el plan de estudios vigente de bachillerato.
 
\end_layout

\begin_layout Standard
Los alumnos de estos liceos podrán presentar los trabajos realizados sobre
 el sistema robótico en el marco del evento de robótica organizado por la
 Facultad de Ingeniería de la Universidad de la República
\begin_inset CommandInset citation
LatexCommand cite
key "SUMO"

\end_inset

, simultáneamente con trabajos realizados por alumnos y docentes universitarios,
 generando un rico ambiente de intercambio de experiencias y conocimientos.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
TODO: ideas de Stallman (software libre) y Bender (libre pero capaz de ser
 comprendido)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El proyecto Butiá se apoya, en todo sentido, sobre las computadoras OLPC
 (One Laptop per Child)
\begin_inset CommandInset citation
LatexCommand cite
key "OLPC"

\end_inset

 proporcionadas al sistema de educación público del Uruguay a través del
 Plan Ceibal
\begin_inset CommandInset citation
LatexCommand cite
key "CEIBAL"

\end_inset

, llevado adelante por el gobierno nacional del Uruguay a partir del año
 2007.
 En la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:La-computadora-OLPC"

\end_inset

 podemos apreciar una de las computadoras del mencionado plan sobre la plataform
a Butiá.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\family sans
\begin_inset Graphics
	filename images/butiaXO.jpg
	lyxscale 50
	width 90col%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
La computadora OLPC sobre la plataforma Butiá.
\begin_inset CommandInset label
LatexCommand label
name "fig:La-computadora-OLPC"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Arquitectura del la plataforma Butiá
\end_layout

\begin_layout Standard
Al momento de diseñar la arquitectura del sistema se tuvo como principal
 objetivo la portabilidad del mismo, ponderando plataformas con pocas prestacion
es de hardware.
 Otro punto en el que se tuvo especial cuidado es en brindar una interfaz
 clara y simple que permita integrar la arquitectura del robot con diferentes
 lenguajes de programación.
 
\end_layout

\begin_layout Standard
Una vista simplificada de los principales componentes de la solución puede
 visualizarse en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Capas"

\end_inset

.
 La arquitectura Butiá consta de tres capas.
 Tomando en cuenta un enfoque botton-up, podemos identificar el nivel más
 cercano al hardware, la primer capa (capa 1), encargada de interactuar
 con los sensores y actuadores.
 En esta capa se especifican los servicios que el firmware brinda, además
 estos servicios son agrupados de forma lógica en componentes de software
 llamados 
\shape italic
módulos de usuario,
\shape default
 los cuales son una abstracción del sensor o actuador que se desea controlar
 en el robot.
 Estos componentes de software residen en el firmware de la placa de entrada/sal
ida (E/S).
 La separación entre esta capa y la siguiente está bien definida por un
 stack de protocolos, lo cual permite obtener un gran nivel de independencia
 del hardware subyacente.
 El prototipo construido es funcional con la placa de E/S Arduino y actualmente
 se presenta un gran nivel de avance con la placa USB4all 
\begin_inset CommandInset citation
LatexCommand cite
key "USB4all"

\end_inset

; además se espera portar a otro tipo de plataformas como Handy Cricket,
 PicoBoard o GoGoBoard.
 Existe una segunda capa (DSI - descubrimiento e invocación de servicios)
 que se encarga de descubrir de forma dinámica los módulos presentes en
 la placa de E/S junto con los servicios o funcionalidades que estos brindan
 y una vez descubiertos son expuestos para poder ser consumidos por una
 aplicación.
 Para permitir un uso más versátil al momento de integrarse con diferentes
 lenguajes de programación se realizó una tercer capa (capa 3), que ofrece
 estos servicios a un nivel mayor de abstracción lo que posibilita que sean
 invocados en la red.
 Esta última capa permite interactuar con el robot desde cualquier lenguaje
 de programación que tenga soporte de sockets.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center

\family sans
\begin_inset Graphics
	filename images/diagrama_componentes_deploy_butia.svg
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Capas"

\end_inset

Componentes de la arquitectura Butiá.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La arquitectura construida es genérica, permitiendo una fácil extensión
 de sus funcionalidades independientemente del hardware de bajo nivel subyacente
, así como portable a diferentes plataformas de bajos recursos de hardware.
\end_layout

\begin_layout Standard
A diferencia de otras plataformas donde la lógica de control se desarrolla
 completamente en una placa de E/S microcontrolada, la arquitectura Butiá
 fomenta un diseño híbrido, donde solo se implementa en la placa de E/S
 la interacción directa con el hardware encapsulándolo en los módulos de
 usuario, luego la lógica de control es desarrollada en un lenguaje de alto
 nivel en base a los servicios que estos módulos exponen.
 Esto permite utilizar herramientas de mayor nivel de abstracción, generando
 código con un alto nivel de mantenibilidad y entendimiento, facilitando
 la comprensión por alumnos que se inician en las ciencias de la computación.
 En la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Niño-trabajando-con"

\end_inset

 un niño de 9 años trabaja en el comportamiento del robot Butiá.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\family sans
\begin_inset Graphics
	filename images/pedro2.JPG
	lyxscale 50
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:joven"

\end_inset

Niño trabajando con la plataforma durante el sumo.uy.
\begin_inset CommandInset label
LatexCommand label
name "fig:Niño-trabajando-con"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La distribución del sistema operativo instalado en las computadoras OLPC
 incluye diversos entornos y lenguajes de programación.
 Entre ellos se encuentra el entorno de programación gráfico Tortugarte
\begin_inset CommandInset citation
LatexCommand cite
key "TurtleArt"

\end_inset

 basado en el lenguaje LOGO
\begin_inset CommandInset citation
LatexCommand cite
key "LOGO"

\end_inset

.
 En el marco del proyecto se extendió el lenguaje agregando una paleta para
 interactuar con la plataforma Butiá.
 En la parte superior de la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Tortugarte"

\end_inset

 se muestra la paleta Butiá integrada al entorno Tortugarte que permite
 controlar los motores y acceder a la lectura de los sensores.
 En la parte inferior de la misma se presenta un comportamiento para evitar
 obstáculos utilizando el sensor Botón.
\end_layout

\begin_layout Standard
Además de esta extensión se desarrollaron APIs para los lenguajes de programació
n Python, C y Lua.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\family sans
\begin_inset Graphics
	filename images/tortuga_evitar_obstaculos.JPG
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Tortugarte"

\end_inset

Evitando obstáculos con Tortugarte.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Implementación del prototipo
\end_layout

\begin_layout Standard
Con el objetivo de cumplir con los requerimientos de portabilidad, los component
es de software que tienen interacción directa con el hardware fueron implementad
os utilizando el lenguaje de programación ANSI C, esto permite lograr tener
 mayor control sobre el hardware y minimizar las latencias vinculadas con
 los tiempos de comunicación.
 La lógica de mayor nivel de abstracción y más propensa a cambios, se realizó
 utilizando el lenguaje interpretado Lua
\begin_inset CommandInset citation
LatexCommand cite
key "LUA"

\end_inset

.
 Lua es un lenguaje de gran nivel de abstracción, su máquina virtual es
 muy pequeña y esta desarrollada en ANSI C lo que permite portarlo fácilmente
 a diferentes arquitecturas, particularmente en aquellas con bajas prestaciones
 de hardware.
 Dado que es un lenguaje interpretado el software desarrollado utilizando
 su maquina virtual es sumamente versátil, evitando generar binarios para
 las distintas arquitecturas como es usual en otros lenguajes, lo cual es
 un gran beneficio al momento del desarrollo, simplificando el testing y
 puesta en producción sobre la plataforma objetivo.
 También existe una versión de Lua, llamada eLua pensada para sistemas con
 aún menos recursos como microcontroladores.
 
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
Se espera que Butiá soporte al menos las siguientes plataformas: 
\end_layout

\begin_layout Enumerate
OLPC.
 Esta es la plataforma del Plan Ceibal.
 El hardware contiene un procesador 
\shape italic
AMD Geode
\shape default
, con arquitectura x86.
 Los primeros modelos poseían 256MB RAM actualmente ya disponen de 512MB.
 El disco duro es de estado sólido de 1GB.
 El software consiste en un kernel 
\shape italic
Linux
\shape default
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
versión
\end_layout

\end_inset

con Sugar
\begin_inset Note Note
status open

\begin_layout Plain Layout
versión
\end_layout

\end_inset

 como interfaz de usuario.
\end_layout

\begin_layout Enumerate
Intel Classmate.
 Es la plataforma para enseñanza de Intel, y es un nombre genérico para
 una línea de productos de distintos fabricantes.
 El hardware es típico para un netbook de bajo costo: procesador 
\shape italic
Intel Atom
\shape default
 (x86), a partir de 512MB de RAM, disco duro magnético.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Colocar la mismo info y detalles que OLPC
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Router Inalámbrico.
 Plataforma de costo y poder de cómputo mínimo prevista.
 Un ejemplo típico es un router 
\shape italic
Asus 520GU
\shape default
.
 Consiste en un sistema embebido con un procesador 
\shape italic
Broadcomm
\shape default
, con 16MB de RAM y 8MB de almacenamiento Flash.
 En el marco del proyecto se realizaron pruebas con 
\shape italic
OpenWRT
\shape default
, una distribución de 
\shape italic
Linux
\shape default
 para sistemas embebidos.
\end_layout

\begin_layout Enumerate
Smartphones.
 Hay una gran cantidad de fabricantes y de plataformas de software.
 Usualmente contienen
\begin_inset Note Note
status open

\begin_layout Plain Layout
Colocar un ejemplo representativo como en Router
\end_layout

\end_inset

 un procesador 
\shape italic
ARM
\shape default
, más de 64MB de RAM y almacenamiento flash.
 El sistema operativo puede estar basado en 
\shape italic
Linux
\shape default
, 
\shape italic
Windows CE
\shape default
, u otros sistemas dedicados.
 
\end_layout

\begin_layout Enumerate
Sistemas basados en 
\shape italic
Single Board Computers
\shape default
 (SBC), se espera que la arquitectura funcione en la placa 
\shape italic
BeagleBoard
\shape default
 y 
\shape italic
Foxboard
\shape default
, para esta última tenemos actualmente un prototipo funcional.
\end_layout

\begin_layout Standard
Se plantea la necesidad de disponer de un componente que pueda ser desplegado
 con mínimas modificaciones en todas las plataformas de interés, y que implement
e las siguientes funcionalidades: 
\end_layout

\begin_layout Itemize
Acceda a la placa de E/S implementando el protocolo USB4all sobre el tipo
 de conexión asociado (USB o Serial).
\end_layout

\begin_layout Itemize
Ofrezca una API que permita acceder las funcionalidades provistas por Butiá
 desde las aplicaciones de usuario.
 
\end_layout

\begin_layout Standard
Este componente se implementó en Lua como dos componentes: una biblioteca
 que implementa la comunicación con la placa (bobot), y una aplicación que
 usa esta biblioteca y exporta su funcionalidad mediante un socket (bobot-server
).
 Esta arquitectura es la solución de referencia y de máxima portabilidad.
 
\end_layout

\begin_layout Standard
El bobot accede la placa microcontroladora mediante USB o Serial.
 Para la primer opción, se enlaza con libusb, una biblioteca portable de
 espacio de usuario para manipular dispositivos USB.
 Este enlace se realiza mediante un binding desarrollado, llamado 
\shape italic
lualibusb
\shape default

\begin_inset CommandInset citation
LatexCommand cite
key "LualibUSB"

\end_inset

.
 Para acceder mediante serial se utiliza una pequeña librería en C que implement
a una comunicación orientada a mensajes, llamada 
\shape italic
serialcomm
\shape default
.
 Bobot es fácilmente extensible para agregar soporte a nuevos módulos de
 la placa controladora (USB4all/Arduino).
 Esto se logra mediante drivers cargados dinámicamente de acuerdo a los
 módulos declarados por la placa controladora.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement htbp
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center

\family sans
\begin_inset Graphics
	filename images/comunicacion.png
	lyxscale 50
	width 90col%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:componentes"

\end_inset

Interacción entre el sistema Butiá y la placa de E/S.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En las plataformas robóticas comercialmente más difundidas, el usuario debe
 llevar nota de qué dispositivo conectó en cada puerto de comunicación y
 declararlo en algún punto de la estructura del software.
 Esto difiere radicalmente respecto a la capacidad de auto-configuración
 o 
\shape italic
plug&play (PnP) 
\shape default
de la plataforma Butiá.
 La idea es exponer al usuario las capacidades sensoriales y de actuación
 del robot Butiá, de una forma ordenada que facilite su aprovechamiento
 evitando etapas de configuración.
 Siguiendo estos principios se diseño un conector PnP flexible, en el cual
 se puedan conectar tanto sensores como actuadores, analógicos como digitales,
 PWM e incluso I2C.
 Dicho conector dispone entre otros de pines de identificación los cuales
 se cablean a vcc o gnd directamente o a través de resistencias, logrando
 diferenciar el tipo de dispositivo conectado.
 
\end_layout

\begin_layout Standard
Ventajas del uso de los conectores PnP Butiá:
\end_layout

\begin_layout Itemize
Constituye una potente herramienta de diagnóstico.
\end_layout

\begin_layout Itemize
Simplifica el acceso al hardware.
\end_layout

\begin_layout Itemize
Permite que el firmware seleccione automáticamente el módulo adecuado para
 manejar cada tipo de dispositivo.
\end_layout

\begin_layout Standard
Se diseño una placa adaptadora a la controladora de E/S que dispone de ocho
 conectores PnP Butiá, y en forma separada el conector para el bus Dynamixel
 (que también cuenta con auto-detección) y un conector de potencia para
 dos motores de continua o un motor de paso.
 Un ejemplo concreto de implementación es el que podemos ver en el Cuadro
 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Especificaciones-del-robot"

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Acá podría ir un verso mejor para referenciar al cuadro
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
placement htbp
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Especificaciones del robot Butiá.
\begin_inset CommandInset label
LatexCommand label
name "tab:Especificaciones-del-robot"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features>
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Elemento
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Instancia
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Motores
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dynamixel AX12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Control de bajo nivel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arduino Mega
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Control de alto nivel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Computadora OLPC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Chasis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Acrílico 5mm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Amortiguación
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Placa acero alto carbono 0.5mm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sensores
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kit DFRobot para Arduino y sensores Sharp
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Utilizando la información de PnP es posible desde la interfaz de Tortugarte
 colorear los elementos de la plataforma Butiá de diferentes colores dependiendo
 si se encuentra o no conectados al robot.
 Esta característica permite que los usuarios puedan detectar rápidamente
 errores de hardware, reduciendo las frustraciones generadas por este tipo
 de situaciones.
 
\end_layout

\begin_layout Section
Trabajo a Futuro
\end_layout

\begin_layout Standard
Actualmente se están logrando grandes avances con la integración de la cámara
 web de la XO como un sensor más, se han realizado pruebas de factibilidad
 que permiten identificar colores y retornar sus coordenadas.
 También se está trabajando en agregar el micrófono de la XO al universo
 de sensores.
 En este sentido se están realizando pruebas para poder procesar el lenguaje
 natural y permitir programar el robot mediante el uso de la voz.
 Otro aspecto interesante en el cual se está investigando es en permitir
 compartir un robot entre varias máquinas brindando los mecanismos necesarios
 para arbitrar el acceso al mismo.
 Por último se están consiguiendo grandes avances en portar la arquitectura
 a plataformas embebidas tipo ARM como son 
\shape italic
FoxBoard
\shape default
 y 
\shape italic
BeagleBoard
\shape default
.
\end_layout

\begin_layout Section
Conclusiones
\end_layout

\begin_layout Standard
Se diseñó una arquitectura que brinda un enfoque genérico e independiente
 del hardware de control.
 Esta arquitectura permite desarrollar el comportamiento del robot Butiá
 mediante lenguajes de programación de fácil acceso y comprensión para estudiant
es liceales como es Tortugarte.
 De todas formas al estar modularizado y bien definido el alcance de cada
 capa, así como el API para acceder a cada una de ellas, existen diferentes
 niveles en los cuales el alumno puede desarrollar el comportamiento, dependiend
o de su nivel de conocimientos, llevando esto a la programación de nuevos
 módulos de usuario en el firmware, así como programación en otros lenguajes
 como Lua, Python, Java.
 Actualmente se ha logrado un nivel suficiente de madurez en el sistema,
 se dispone de 30 robots en producción distribuidos en todo el país.
\end_layout

\begin_layout Standard
Desde el punto de vista social, a través de este proyecto se logra acortar
 la brecha para los que por razones económicas no pueden alcanzar dichas
 tecnologías.
 En este sentido se logra un proyecto con un fin democratizador.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Trabajo futuro: Jabber, tecnología de desechos, scratch, portabilidad a
 otras placas de E/S, utilización de los sensores de la XO (video, sonido),
 lenguaje hablado.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "jar2010"
options "IEEEtran"

\end_inset


\end_layout

\end_body
\end_document
